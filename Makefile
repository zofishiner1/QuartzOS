# ============== –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ==============
KERNEL_ASM = kernel/kernel.asm
KERNEL_C = kernel/kernel.c
ATA_DISK_C = modules/disk/ata_disk.c
ATA_DISK_H = modules/disk/ata_disk.h
COLORS_H = kernel/colors.h # –î–æ–±–∞–≤–ª–µ–Ω–æ
OUTPUT_ISO = QuartzOS.iso
LINKER_SCRIPT = kernel/link.ld
BUILD_DIR = build
ISO_DIR = $(BUILD_DIR)/iso
GRUB_CFG = $(ISO_DIR)/boot/grub/grub.cfg
DISK_SIZE ?= 100
RAM_SIZE ?= 16

# ============== –ü–ê–†–ê–ú–ï–¢–†–´ –°–ë–û–†–ö–ò ==============
CFLAGS = -m32 -ffreestanding -fno-stack-protector -Wall -Wextra -O2 -Ikernel # –î–æ–±–∞–≤–ª–µ–Ω–æ -Ikernel
LDFLAGS = -m elf_i386 -T $(LINKER_SCRIPT) -nostdlib -z noexecstack

# ============== –¶–ï–õ–ò ==============
all: iso qemu

# ============== –°–ë–û–†–ö–ê –û–ë–™–ï–ö–¢–ù–´–• –§–ê–ô–õ–û–í ==============
$(BUILD_DIR)/kasm.o: $(KERNEL_ASM)
	@echo "üî® –°–±–æ—Ä–∫–∞ assembler-—Ñ–∞–π–ª–∞..."
	@mkdir -p $(BUILD_DIR)
	@nasm -f elf32 $< -o $@

$(BUILD_DIR)/kc.o: $(KERNEL_C) $(COLORS_H) # COLORS_H –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	@echo "üî® –°–±–æ—Ä–∫–∞ C-—Ñ–∞–π–ª–∞ kernel.c..."
	@mkdir -p $(BUILD_DIR)
	@gcc $(CFLAGS) -c $< -o $@

$(BUILD_DIR)/ata_disk.o: $(ATA_DISK_C) $(ATA_DISK_H)
	@echo "üî® –°–±–æ—Ä–∫–∞ C-—Ñ–∞–π–ª–∞ ata_disk.c..."
	@mkdir -p $(BUILD_DIR)
	@gcc $(CFLAGS) -c $(ATA_DISK_C) -o $@

# ============== –ö–û–ú–ü–û–ù–û–í–ö–ê –Ø–î–†–ê ==============
$(BUILD_DIR)/kernel: $(BUILD_DIR)/kasm.o $(BUILD_DIR)/kc.o $(BUILD_DIR)/ata_disk.o
	@echo "üîó –ö–æ–º–ø–æ–Ω–æ–≤–∫–∞ —è–¥—Ä–∞..."
	@ld $(LDFLAGS) -o $@ $^

# ============== –°–û–ó–î–ê–ù–ò–ï –û–ë–†–ê–ó–ê ISO ==============
$(GRUB_CFG): templates/grub.cfg
	@echo "üìÑ –°–æ–∑–¥–∞–Ω–∏–µ grub.cfg..."
	@mkdir -p $(dir $@)
	@cp templates/grub.cfg $@

$(ISO_DIR)/boot/kernel: $(BUILD_DIR)/kernel
	@echo "‚öôÔ∏è –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —è–¥—Ä–∞ –≤ ISO..."
	@mkdir -p $(dir $@)
	@cp $< $@

iso: $(GRUB_CFG) $(ISO_DIR)/boot/kernel
	@echo "üìÄ –°–æ–∑–¥–∞–Ω–∏–µ ISO –æ–±—Ä–∞–∑–∞..."
	@grub-mkrescue -o $(OUTPUT_ISO) $(ISO_DIR) 2>/dev/null

# ============== –°–û–ó–î–ê–ù–ò–ï –ò –ó–ê–ü–£–°–ö QEMU ==============
qemu: iso
	@echo "üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–∑–∞ –¥–∏—Å–∫–∞ –∏ –∑–∞–ø—É—Å–∫ QEMU..."
	@qemu-img create -f raw quartzos.img ${DISK_SIZE}M
	@qemu-system-i386 -m ${RAM_SIZE} -drive format=raw,file=quartzos.img -cdrom $(OUTPUT_ISO) -boot order=d

	@echo -e "\n‚úÖ –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω—ã!\n–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞:"
	@echo "qemu-system-i386 -m ${RAM_SIZE} -drive format=raw,file=quartzos.img -cdrom $(OUTPUT_ISO) -boot order=d"

# ============== –£–ë–û–†–ö–ê ==============
clean:
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞..."
	@rm -rf $(BUILD_DIR) $(OUTPUT_ISO) quartzos.img

.PHONY: all iso qemu clean
